{"version":3,"sources":["./src/app/auth/auth.component.html","./src/app/auth/forgot/forgot.component.html","./src/app/auth/reset/reset.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.scss","./src/app/auth/auth.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/forgot/forgot.component.scss","./src/app/auth/forgot/forgot.component.ts","./src/app/auth/reset/reset.component.scss","./src/app/auth/reset/reset.component.ts","./src/app/shared/validators/register-validation.ts"],"names":[],"mappings":"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","file":"app-auth-auth-module-es2015.js","sourcesContent":["export default \"<div class=\\\"login-register\\\">\\r\\n  <bx-login>\\r\\n    <h2>Login</h2>\\r\\n    <p>Please login to access your account.</p>\\r\\n  </bx-login>\\r\\n  <bx-register>\\r\\n    <h2>Create Account</h2>\\r\\n    <p>To track your order(s) and make future purchases quicker, please create an account.</p>\\r\\n  </bx-register>\\r\\n</div>\\r\\n\"","export default \"<header class=\\\"page-header\\\">\\r\\n  <h1>Forgot</h1>\\r\\n</header>\\r\\n<div class=\\\"page-body\\\">\\r\\n  <form class=\\\"forgot-form\\\" [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"reset(forgotForm.value)\\\">\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" autocomplete=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\"\\r\\n        required>\\r\\n      <mat-error *ngIf=\\\"forgotForm.get('email').hasError('required')\\\">\\r\\n        This field is required\\r\\n      </mat-error>\\r\\n      <mat-error *ngIf=\\\"forgotForm.get('email').hasError('email') && !forgotForm.get('email').hasError('required')\\\">\\r\\n        Please enter a valid email address\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!forgotForm.valid\\\">Reset password</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","export default \"<header class=\\\"page-header\\\">\\r\\n  <h1>Reset Password</h1>\\r\\n</header>\\r\\n<div class=\\\"page-body\\\">\\r\\n  <form class=\\\"reset-form\\\" [formGroup]=\\\"resetForm\\\" (ngSubmit)=\\\"reset(resetForm.value)\\\">\\r\\n    <div formGroupName=\\\"passwords\\\">\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"password\\\" matInput placeholder=\\\"New Password\\\" formControlName=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\"\\r\\n          required>\\r\\n        <mat-error *ngIf=\\\"resetForm.get('passwords').get('password').hasError('required')\\\">\\r\\n          This field is required\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\"\\r\\n          [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n        <mat-error *ngIf=\\\"resetForm.get('passwords').get('confirmPassword').hasError('required')\\\">\\r\\n          This field is required\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"resetForm.get('passwords').get('confirmPassword').hasError('MatchPassword')\\\">\\r\\n          Passwords must match\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!resetForm.valid\\\">Update password</button>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { ResetComponent } from './reset/reset.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { AuthComponent } from './auth.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent\r\n  },\r\n  {\r\n    path: 'forgot',\r\n    component: ForgotComponent\r\n  },\r\n  {\r\n    path: 'reset/:token',\r\n    component: ResetComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","export default \":host {\\n  display: block;\\n  padding: 2rem 0;\\n  width: 100%;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n  margin-right: auto;\\n  margin-left: auto;\\n}\\n@media (min-width: 576px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 768px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 992px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  :host {\\n    max-width: 1200px;\\n  }\\n}\\n.login-register {\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-flex-wrap: wrap;\\n      -ms-flex-wrap: wrap;\\n          flex-wrap: wrap;\\n  margin-right: -15px;\\n  margin-left: -15px;\\n}\\n.login-register bx-login,\\n.login-register bx-register {\\n  position: relative;\\n  width: 100%;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n  -webkit-flex: 0 0 100%;\\n      -ms-flex: 0 0 100%;\\n          flex: 0 0 100%;\\n  max-width: 100%;\\n}\\n@media (min-width: 768px) {\\n  .login-register bx-login,\\n.login-register bx-register {\\n    -webkit-flex: 0 0 50%;\\n        -ms-flex: 0 0 50%;\\n            flex: 0 0 50%;\\n    max-width: 50%;\\n  }\\n}\\n.login-register bx-register {\\n  margin-top: 1rem;\\n}\\n@media (min-width: 768px) {\\n  .login-register bx-register {\\n    margin-top: 0;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component } from '@angular/core';\r\n@Component({\r\n  selector: 'bx-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent {\r\n  constructor() {}\r\n}\r\n","import { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthFormModule } from '@app/shared/modules/auth-form/auth-form.module';\r\nimport { SharedModule } from '@app/shared/shared.module';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { AuthComponent } from './auth.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { MaterialModule } from '@app/material/material.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    AuthFormModule,\r\n    AuthRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [AuthComponent, ForgotComponent, ResetComponent]\r\n})\r\nexport class AuthModule {}\r\n","export default \":host {\\n  display: block;\\n  padding: 15px;\\n  width: 100%;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n  margin-right: auto;\\n  margin-left: auto;\\n}\\n@media (min-width: 576px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 768px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 992px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  :host {\\n    max-width: 600px;\\n  }\\n}\\n@media (min-width: 576px) {\\n  :host {\\n    padding: 2rem 15px;\\n  }\\n}\\n.page-body {\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-flex-wrap: wrap;\\n      -ms-flex-wrap: wrap;\\n          flex-wrap: wrap;\\n  margin-right: -15px;\\n  margin-left: -15px;\\n}\\n.messages,\\n.forgot-form {\\n  position: relative;\\n  width: 100%;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n  -webkit-flex: 0 0 100%;\\n      -ms-flex: 0 0 100%;\\n          flex: 0 0 100%;\\n  max-width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnDestroy } from '@angular/core';\r\nimport { ApiService } from '@app/core/services/api.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { untilComponentDestroyed } from '@global/untilDestroy';\r\nimport { MyErrorStateMatcher } from '@app/form-error-state';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'bx-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.scss']\r\n})\r\nexport class ForgotComponent implements OnDestroy {\r\n  forgotForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private api: ApiService\r\n  ) {\r\n    this.forgotForm = this.fb.group({\r\n      email: [null, Validators.compose([Validators.required, Validators.email])]\r\n    });\r\n  }\r\n\r\n  reset(data: any) {\r\n    const reset = {\r\n      action: 'sendResetPwd',\r\n      value: data\r\n    };\r\n    this.api\r\n      .create('authManagement', reset, true, 'Requesting password reset')\r\n      .pipe(untilComponentDestroyed(this))\r\n      .subscribe(() => {\r\n        this.toastr.success(\r\n          'Please check your email account for your password reset link.',\r\n          'Success'\r\n        );\r\n        this.forgotForm.reset();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","export default \":host {\\n  display: block;\\n  padding: 15px;\\n  width: 100%;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n  margin-right: auto;\\n  margin-left: auto;\\n}\\n@media (min-width: 576px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 768px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 992px) {\\n  :host {\\n    max-width: 100%;\\n  }\\n}\\n@media (min-width: 1200px) {\\n  :host {\\n    max-width: 600px;\\n  }\\n}\\n@media (min-width: 576px) {\\n  :host {\\n    padding: 2rem 15px;\\n  }\\n}\\n.page-body {\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-flex-wrap: wrap;\\n      -ms-flex-wrap: wrap;\\n          flex-wrap: wrap;\\n  margin-right: -15px;\\n  margin-left: -15px;\\n}\\n.messages,\\n.reset-form {\\n  position: relative;\\n  width: 100%;\\n  padding-right: 15px;\\n  padding-left: 15px;\\n  -webkit-flex: 0 0 100%;\\n      -ms-flex: 0 0 100%;\\n          flex: 0 0 100%;\\n  max-width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { ApiService } from '../../core/services/api.service';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MyErrorStateMatcher } from '@app/form-error-state';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { untilComponentDestroyed } from '@global/untilDestroy';\r\nimport { PasswordValidation } from '@app/shared/validators/register-validation';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'bx-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.scss']\r\n})\r\nexport class ResetComponent implements OnDestroy {\r\n  resetForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher();\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private api: ApiService\r\n  ) {\r\n    this.resetForm = this.fb.group({\r\n      passwords: this.fb.group(\r\n        {\r\n          password: [null, [Validators.required]],\r\n          confirmPassword: [null, [Validators.required]]\r\n        },\r\n        {\r\n          validator: PasswordValidation.MatchPassword\r\n        }\r\n      )\r\n    });\r\n  }\r\n\r\n  reset(data: any) {\r\n    const reset = {\r\n      action: 'resetPwdLong',\r\n      value: {\r\n        token: this.route.snapshot.params.token,\r\n        password: data.passwords.password\r\n      }\r\n    };\r\n    this.api\r\n      .create('authManagement', reset, true, 'Updating password')\r\n      .pipe(untilComponentDestroyed(this))\r\n      .subscribe(() => {\r\n        this.toastr.success(\r\n          'Your password has been reset you may now login.',\r\n          'Success'\r\n        );\r\n        this.router.navigate(['/login']);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nexport class PasswordValidation {\r\n  static MatchPassword(AC: AbstractControl) {\r\n    const password = AC.get('password').value;\r\n    const confirmPassword = AC.get('confirmPassword').value;\r\n    if (password !== confirmPassword) {\r\n      AC.get('confirmPassword').setErrors({ MatchPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport class EmailValidation {\r\n  static MatchEmail(AC: AbstractControl) {\r\n    const email = AC.get('email').value;\r\n    const confirmEmail = AC.get('confirmEmail').value;\r\n    if (email !== confirmEmail) {\r\n      AC.get('confirmEmail').setErrors({ MatchEmail: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}