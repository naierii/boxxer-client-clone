{"version":3,"sources":["./src/app/shared/modules/address-form/address-form.component.html","./src/app/shared/modules/address-form/address-form.component.scss","./src/app/shared/modules/address-form/address-form.component.ts","./src/app/shared/modules/address-form/address-form.module.ts","./src/app/shared/modules/address-form/country.service.ts","./src/app/shared/validators/register-validation.ts"],"names":[],"mappings":"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","file":"default~app-user-user-module~checkout-checkout-module-es2015.js","sourcesContent":["export default \"<div [formGroup]=\\\"parentForm\\\" *ngIf=\\\"!loading\\\">\\r\\n  <div [formGroupName]=\\\"groupName\\\">\\r\\n    <div *ngIf=\\\"showNames\\\">\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"text\\\" matInput placeholder=\\\"First Name\\\" formControlName=\\\"firstName\\\" autocomplete=\\\"given-name\\\"\\r\\n          [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n        <mat-error *ngIf=\\\"parentForm.get(groupName).get('firstName').hasError('required')\\\">\\r\\n          First name is required\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Last Name\\\" formControlName=\\\"lastName\\\" autocomplete=\\\"family-name\\\"\\r\\n          [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n        <mat-error *ngIf=\\\"parentForm.get(groupName).get('lastName').hasError('required')\\\">\\r\\n          Last name is required\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"text\\\" matInput placeholder=\\\"House number and street name\\\" formControlName=\\\"address1\\\"\\r\\n        autocomplete=\\\"address-line1\\\" [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n      <mat-error *ngIf=\\\"parentForm.get(groupName).get('address1').hasError('required')\\\">\\r\\n        This field is required\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Apartment, suite, unit etc. (optional)\\\" formControlName=\\\"address2\\\"\\r\\n        autocomplete=\\\"address-line2\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Town / City\\\" formControlName=\\\"city\\\" autocomplete=\\\"address-level2\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n      <mat-error *ngIf=\\\"parentForm.get(groupName).get('city').hasError('required')\\\">\\r\\n        This field is required\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"text\\\" matInput placeholder=\\\"County\\\" formControlName=\\\"region\\\" autocomplete=\\\"address-level1\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\">\\r\\n      <mat-error *ngIf=\\\"parentForm.get(groupName).get('region').hasError('required')\\\">\\r\\n        This field is required\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Country</mat-label>\\r\\n      <select matNativeControl formControlName=\\\"country\\\" class=\\\"browser-default\\\" required>\\r\\n        <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.name\\\">{{ country.name }}</option>\\r\\n      </select>\\r\\n      <mat-error *ngIf=\\\"parentForm.get(groupName).get('country').hasError('required')\\\">\\r\\n        This field is required\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Postcode\\\" formControlName=\\\"postcode\\\" autocomplete=\\\"postal-code\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\" [required]=\\\"postcodeRequired\\\">\\r\\n      <mat-error *ngIf=\\\"parentForm.get(groupName).get('postcode').hasError('required')\\\">\\r\\n        This field is required\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field *ngIf=\\\"showContact\\\">\\r\\n      <input type=\\\"tel\\\" matInput placeholder=\\\"Mobile Phone Number\\\" formControlName=\\\"phone\\\" autocomplete=\\\"tel\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\" required>\\r\\n      <mat-hint>We need your mobile number in case we need to text you with urgent issues or the courier may need to\\r\\n        call about your\\r\\n        delivery.\\r\\n      </mat-hint>\\r\\n      <mat-error *ngIf=\\\"parentForm.get(groupName).get('phone').hasError('required')\\\">\\r\\n        This field is required\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \":host {\\n  display: block;\\n  margin-bottom: 2rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2FkZHJlc3MtZm9ybS9DOlxcVXNlcnNcXFJlaWFuXFxEZXNrdG9wXFxXb3JrXFxGcmVlbGFuY2VcXGJveHhlci1jbGllbnQtY2xvbmUvcHJvamVjdHNcXGNsaWVudFxcc3JjXFxhcHBcXHNoYXJlZFxcbW9kdWxlc1xcYWRkcmVzcy1mb3JtXFxhZGRyZXNzLWZvcm0uY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9jbGllbnQvc3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9hZGRyZXNzLWZvcm0vYWRkcmVzcy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtFQUNBLG1CQUFBO0FDQ0YiLCJmaWxlIjoicHJvamVjdHMvY2xpZW50L3NyYy9hcHAvc2hhcmVkL21vZHVsZXMvYWRkcmVzcy1mb3JtL2FkZHJlc3MtZm9ybS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiAycmVtO1xyXG59XHJcbiIsIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG59Il19 */\"","import {\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  FormGroupDirective,\r\n  NgForm,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { untilComponentDestroyed } from '@global/untilDestroy';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CountryService } from './country.service';\r\nimport { CookieService } from '@gorniv/ngx-universal';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.touched || isSubmitted)\r\n    );\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'bx-address-form',\r\n  templateUrl: './address-form.component.html',\r\n  styleUrls: ['./address-form.component.scss']\r\n})\r\nexport class AddressFormComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  parentForm: FormGroup;\r\n  @Input()\r\n  address: any;\r\n  @Input()\r\n  groupName: string;\r\n  @Input()\r\n  showNames = false;\r\n  @Input()\r\n  showContact = false;\r\n  @Output()\r\n  public countryChanged: EventEmitter<any> = new EventEmitter<any>();\r\n  loading = true;\r\n  countries: any[] = [];\r\n  addressGroup: FormGroup;\r\n  filteredCountries: Observable<any[]>;\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n  postcodeRequired = true;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public country: CountryService,\r\n    private cookieService: CookieService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.country\r\n      .getCountries()\r\n      .pipe(\r\n        map((resp: any) => resp.data),\r\n        untilComponentDestroyed(this)\r\n      )\r\n      .subscribe(resp => {\r\n        this.countries = resp;\r\n        this.createForm();\r\n      });\r\n  }\r\n\r\n  createForm() {\r\n    this.addressGroup = this.fb.group({\r\n      address1: [\r\n        this.address ? this.address.address1 : null,\r\n        [Validators.required]\r\n      ],\r\n      address2: [this.address ? this.address.address2 : null],\r\n      city: [this.address ? this.address.city : null, [Validators.required]],\r\n      region: [this.address ? this.address.region : null],\r\n      country_code: [\r\n        this.address ? this.address.country_code : null,\r\n        [Validators.required]\r\n      ],\r\n      country: [\r\n        this.address ? this.address.country : null,\r\n        [Validators.required]\r\n      ],\r\n      postcode: [this.address ? this.address.postcode : null]\r\n    });\r\n\r\n    if (this.showNames) {\r\n      this.addressGroup.addControl(\r\n        'firstName',\r\n        this.fb.control(this.address ? this.address.firstName : null, [\r\n          Validators.required\r\n        ])\r\n      );\r\n      this.addressGroup.addControl(\r\n        'lastName',\r\n        this.fb.control(this.address ? this.address.lastName : null, [\r\n          Validators.required\r\n        ])\r\n      );\r\n    }\r\n\r\n    if (this.showContact) {\r\n      this.addressGroup.addControl(\r\n        'phone',\r\n        this.fb.control(this.address ? this.address.phone : null, [\r\n          Validators.required\r\n        ])\r\n      );\r\n    }\r\n    this.parentForm.addControl(this.groupName, this.addressGroup);\r\n    this.loading = false;\r\n\r\n    this.subscribeCountryChange();\r\n  }\r\n\r\n  subscribeCountryChange() {\r\n    if (this.address && this.address.country) {\r\n      this.setPostCodeValidation(this.address.country);\r\n    }\r\n\r\n    const countryCodeCtrl = this.addressGroup.controls.country_code\r\n      .valueChanges;\r\n    const countryCtrl = this.addressGroup.controls.country.valueChanges;\r\n    const postcodeCtrl = this.addressGroup.controls.postcode;\r\n    countryCtrl.pipe(untilComponentDestroyed(this)).subscribe(value => {\r\n      const searchCountry = this.countries.find(country => {\r\n        return country.name.toLowerCase().indexOf(value.toLowerCase()) === 0;\r\n      });\r\n      this.setCountryCode(searchCountry);\r\n    });\r\n    countryCodeCtrl\r\n      .pipe(untilComponentDestroyed(this))\r\n      .subscribe(code => this.countryChanged.emit(code));\r\n\r\n    // Set default country\r\n    if (!this.address) {\r\n      const countryCode = this.cookieService.get('country') || 'GB';\r\n      const searchCountry = this.countries.find(country => {\r\n        return (\r\n          country.cca2.toLowerCase().indexOf(countryCode.toLowerCase()) === 0\r\n        );\r\n      });\r\n      if (searchCountry) {\r\n        this.addressGroup.controls.country.setValue(searchCountry.name);\r\n      }\r\n    }\r\n  }\r\n\r\n  setCountryCode(country: any) {\r\n    this.addressGroup.controls.country_code.setValue(country.cca2);\r\n    this.setPostCodeValidation(country.name);\r\n  }\r\n\r\n  setPostCodeValidation(country: string) {\r\n    const postcodeCtrl = this.addressGroup.controls.postcode;\r\n    if (country !== 'Ireland') {\r\n      this.postcodeRequired = true;\r\n      postcodeCtrl.setValidators([Validators.required]);\r\n      postcodeCtrl.updateValueAndValidity();\r\n    } else {\r\n      this.postcodeRequired = false;\r\n      postcodeCtrl.setValidators(null);\r\n      postcodeCtrl.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '@app/material/material.module';\r\n\r\nimport { AddressFormComponent } from './address-form.component';\r\nimport { CountryService } from './country.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, MaterialModule],\r\n  declarations: [AddressFormComponent],\r\n  providers: [CountryService],\r\n  exports: [AddressFormComponent]\r\n})\r\nexport class AddressFormModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\n\r\n@Injectable()\r\nexport class CountryService {\r\n  private service: any;\r\n  private endpoint: string;\r\n  private host: string = environment.host;\r\n  constructor(private http: HttpClient) {\r\n    this.endpoint = 'country';\r\n  }\r\n\r\n  get url() {\r\n    return `${this.host}/${this.endpoint}`;\r\n  }\r\n\r\n  getCountries() {\r\n    const query: any = {\r\n      $select: ['name', 'cca2', 'altSpellings'],\r\n      $sort: ['name'],\r\n      $limit: 5000\r\n    };\r\n    return this.http.get<any>(this.url, {\r\n      params: query\r\n    });\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\nexport class PasswordValidation {\r\n  static MatchPassword(AC: AbstractControl) {\r\n    const password = AC.get('password').value;\r\n    const confirmPassword = AC.get('confirmPassword').value;\r\n    if (password !== confirmPassword) {\r\n      AC.get('confirmPassword').setErrors({ MatchPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport class EmailValidation {\r\n  static MatchEmail(AC: AbstractControl) {\r\n    const email = AC.get('email').value;\r\n    const confirmEmail = AC.get('confirmEmail').value;\r\n    if (email !== confirmEmail) {\r\n      AC.get('confirmEmail').setErrors({ MatchEmail: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}