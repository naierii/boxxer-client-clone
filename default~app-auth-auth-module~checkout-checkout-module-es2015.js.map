{"version":3,"sources":["./src/app/shared/modules/auth-form/login/login.component.html","./src/app/shared/modules/auth-form/register/register.component.html","./src/app/shared/modules/auth-form/auth-form.module.ts","./src/app/shared/modules/auth-form/login/login.component.scss","./src/app/shared/modules/auth-form/login/login.component.ts","./src/app/shared/modules/auth-form/register/register.component.scss","./src/app/shared/modules/auth-form/register/register.component.ts"],"names":[],"mappings":"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","file":"default~app-auth-auth-module~checkout-checkout-module-es2015.js","sourcesContent":["export default \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin(loginForm.value)\\\">\\r\\n  <ng-content></ng-content>\\r\\n  <mat-form-field>\\r\\n    <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" autocomplete=\\\"username\\\" required>\\r\\n    <mat-error *ngIf=\\\"loginForm.get('email').hasError('email') && !loginForm.get('email').hasError('required')\\\">\\r\\n      Please enter a valid email address\\r\\n    </mat-error>\\r\\n    <mat-error *ngIf=\\\"loginForm.get('email').hasError('required')\\\">\\r\\n      Email is\\r\\n      <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" autocomplete=\\\"current-password\\\"\\r\\n      required>\\r\\n    <mat-error *ngIf=\\\"loginForm.get('password').hasError('required')\\\">\\r\\n      Password is\\r\\n      <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['/login/forgot']\\\" class=\\\"btn-text\\\">Forgot password?</button>\\r\\n</form>\\r\\n\"","export default \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegister(registerForm.value)\\\">\\r\\n  <ng-content></ng-content>\\r\\n  <div formGroupName=\\\"emails\\\" *ngIf=\\\"!email\\\">\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" autocomplete=\\\"username\\\" required>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('emails').get('email').hasError('email') && !registerForm.get('emails').get('email').hasError('required')\\\">\\r\\n        Please enter a valid email address\\r\\n      </mat-error>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('emails').get('email').hasError('required')\\\">\\r\\n        Email is\\r\\n        <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"email\\\" matInput placeholder=\\\"Confirm Email\\\" formControlName=\\\"confirmEmail\\\" autocomplete=\\\"username\\\"\\r\\n        required>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('emails').get('confirmEmail').hasError('MatchEmail') && !registerForm.get('emails').get('confirmEmail').hasError('required')\\\">\\r\\n        Email address must match\\r\\n      </mat-error>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('emails').get('confirmEmail').hasError('required')\\\">\\r\\n        Email is\\r\\n        <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div formGroupName=\\\"passwords\\\">\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" autocomplete=\\\"new-password\\\"\\r\\n        required>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('passwords').get('password').hasError('required')\\\">\\r\\n        Password is\\r\\n        <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" autocomplete=\\\"new-password\\\"\\r\\n        required>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('passwords').get('confirmPassword').hasError('MatchPassword') && !registerForm.get('passwords').get('confirmPassword').hasError('required')\\\">\\r\\n        Password must match\\r\\n      </mat-error>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('passwords').get('confirmPassword').hasError('required')\\\">\\r\\n        Password is\\r\\n        <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <mat-checkbox formControlName=\\\"newsletter\\\">Subscribe to recieve the latest product news and offers.</mat-checkbox>\\r\\n  <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Create</button>\\r\\n</form>\\r\\n\"","import { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '@app/material/material.module';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, MaterialModule, RouterModule],\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  exports: [LoginComponent, RegisterComponent]\r\n})\r\nexport class AuthFormModule {}\r\n","export default \".btn {\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2F1dGgtZm9ybS9sb2dpbi9DOlxcVXNlcnNcXFJlaWFuXFxEZXNrdG9wXFxXb3JrXFxGcmVlbGFuY2VcXGJveHhlci1jbGllbnQtY2xvbmUvcHJvamVjdHNcXGNsaWVudFxcc3JjXFxhcHBcXHNoYXJlZFxcbW9kdWxlc1xcYXV0aC1mb3JtXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9jbGllbnQvc3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9hdXRoLWZvcm0vbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGIiwiZmlsZSI6InByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2F1dGgtZm9ybS9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4ge1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuIiwiLmJ0biB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59Il19 */\"","import { Router } from '@angular/router';\r\nimport { AuthService } from '@app/core/services/auth.service';\r\nimport { Component, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { untilComponentDestroyed } from '@global/untilDestroy';\r\n\r\ninterface Credentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'bx-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnDestroy {\r\n  @Output()\r\n  loginComplete = new EventEmitter();\r\n  public loginForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: [\r\n        null,\r\n        Validators.compose([Validators.required, Validators.email])\r\n      ],\r\n      password: [null, Validators.required]\r\n    });\r\n  }\r\n  onLogin(credentials: Credentials) {\r\n    this.authService\r\n      .login(credentials.email, credentials.password)\r\n      .pipe(untilComponentDestroyed(this))\r\n      .subscribe(resp => {\r\n        this.router.navigate([this.authService.redirectUrl]);\r\n        this.loginComplete.emit();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","export default \".btn {\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2F1dGgtZm9ybS9yZWdpc3Rlci9DOlxcVXNlcnNcXFJlaWFuXFxEZXNrdG9wXFxXb3JrXFxGcmVlbGFuY2VcXGJveHhlci1jbGllbnQtY2xvbmUvcHJvamVjdHNcXGNsaWVudFxcc3JjXFxhcHBcXHNoYXJlZFxcbW9kdWxlc1xcYXV0aC1mb3JtXFxyZWdpc3RlclxccmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9jbGllbnQvc3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9hdXRoLWZvcm0vcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGIiwiZmlsZSI6InByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2F1dGgtZm9ybS9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4ge1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuIiwiLmJ0biB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59Il19 */\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '@app/core/services/api.service';\r\nimport { AuthService } from '@app/core/services/auth.service';\r\nimport {\r\n  EmailValidation,\r\n  PasswordValidation\r\n} from '@app/shared/validators/register-validation';\r\nimport * as fromRoot from '@app/reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport { untilComponentDestroyed } from '@global/untilDestroy';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport * as cart from '@app/cart/actions/cart';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'bx-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  email: string;\r\n  @Input()\r\n  checkout: boolean;\r\n  public registerForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private auth: AuthService,\r\n    private store: Store<fromRoot.State>,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.registerForm = this.fb.group({\r\n      newsletter: [false],\r\n      checkout: [this.checkout],\r\n      emails: this.fb.group(\r\n        {\r\n          email: [\r\n            this.email ? this.email : null,\r\n            Validators.compose([Validators.required, Validators.email])\r\n          ],\r\n          confirmEmail: [\r\n            this.email ? this.email : null,\r\n            Validators.compose([Validators.required, Validators.email])\r\n          ]\r\n        },\r\n        {\r\n          validator: EmailValidation.MatchEmail\r\n        }\r\n      ),\r\n      passwords: this.fb.group(\r\n        {\r\n          password: [null, [Validators.required]],\r\n          confirmPassword: [null, [Validators.required]]\r\n        },\r\n        {\r\n          validator: PasswordValidation.MatchPassword\r\n        }\r\n      )\r\n    });\r\n  }\r\n  onRegister(values: any) {\r\n    this.api\r\n      .create(\r\n        'users',\r\n        {\r\n          email: values.emails.email,\r\n          password: values.passwords.password,\r\n          newsletter: values.newsletter,\r\n          checkout: values.checkout\r\n        },\r\n        true,\r\n        'Creating account'\r\n      )\r\n      .pipe(\r\n        switchMap((resp: any) => {\r\n          return this.auth.login(\r\n            values.emails.email,\r\n            values.passwords.password\r\n          );\r\n        }),\r\n        untilComponentDestroyed(this)\r\n      )\r\n      .subscribe(() => {\r\n        this.router.navigate(['/account']);\r\n        this.store.dispatch(new cart.Email(null));\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n"],"sourceRoot":"webpack:///"}