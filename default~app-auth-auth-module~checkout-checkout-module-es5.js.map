{"version":3,"sources":["src/app/shared/modules/auth-form/login/login.component.html","src/app/shared/modules/auth-form/register/register.component.html","src/app/shared/modules/auth-form/auth-form.module.ts","src/app/shared/modules/auth-form/login/login.component.scss","src/app/shared/modules/auth-form/login/login.component.ts","src/app/shared/modules/auth-form/register/register.component.scss","src/app/shared/modules/auth-form/register/register.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin(loginForm.value)\\\">\\r\\n  <ng-content></ng-content>\\r\\n  <mat-form-field>\\r\\n    <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" autocomplete=\\\"username\\\" required>\\r\\n    <mat-error *ngIf=\\\"loginForm.get('email').hasError('email') && !loginForm.get('email').hasError('required')\\\">\\r\\n      Please enter a valid email address\\r\\n    </mat-error>\\r\\n    <mat-error *ngIf=\\\"loginForm.get('email').hasError('required')\\\">\\r\\n      Email is\\r\\n      <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field>\\r\\n    <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" autocomplete=\\\"current-password\\\"\\r\\n      required>\\r\\n    <mat-error *ngIf=\\\"loginForm.get('password').hasError('required')\\\">\\r\\n      Password is\\r\\n      <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n  <button type=\\\"button\\\" [routerLink]=\\\"['/login/forgot']\\\" class=\\\"btn-text\\\">Forgot password?</button>\\r\\n</form>\\r\\n\"","export default \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegister(registerForm.value)\\\">\\r\\n  <ng-content></ng-content>\\r\\n  <div formGroupName=\\\"emails\\\" *ngIf=\\\"!email\\\">\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" autocomplete=\\\"username\\\" required>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('emails').get('email').hasError('email') && !registerForm.get('emails').get('email').hasError('required')\\\">\\r\\n        Please enter a valid email address\\r\\n      </mat-error>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('emails').get('email').hasError('required')\\\">\\r\\n        Email is\\r\\n        <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"email\\\" matInput placeholder=\\\"Confirm Email\\\" formControlName=\\\"confirmEmail\\\" autocomplete=\\\"username\\\"\\r\\n        required>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('emails').get('confirmEmail').hasError('MatchEmail') && !registerForm.get('emails').get('confirmEmail').hasError('required')\\\">\\r\\n        Email address must match\\r\\n      </mat-error>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('emails').get('confirmEmail').hasError('required')\\\">\\r\\n        Email is\\r\\n        <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div formGroupName=\\\"passwords\\\">\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" autocomplete=\\\"new-password\\\"\\r\\n        required>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('passwords').get('password').hasError('required')\\\">\\r\\n        Password is\\r\\n        <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"password\\\" matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" autocomplete=\\\"new-password\\\"\\r\\n        required>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('passwords').get('confirmPassword').hasError('MatchPassword') && !registerForm.get('passwords').get('confirmPassword').hasError('required')\\\">\\r\\n        Password must match\\r\\n      </mat-error>\\r\\n      <mat-error *ngIf=\\\"registerForm.get('passwords').get('confirmPassword').hasError('required')\\\">\\r\\n        Password is\\r\\n        <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <mat-checkbox formControlName=\\\"newsletter\\\">Subscribe to recieve the latest product news and offers.</mat-checkbox>\\r\\n  <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\">Create</button>\\r\\n</form>\\r\\n\"","import { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '@app/material/material.module';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, MaterialModule, RouterModule],\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  exports: [LoginComponent, RegisterComponent]\r\n})\r\nexport class AuthFormModule {}\r\n","export default \".btn {\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2F1dGgtZm9ybS9sb2dpbi9DOlxcVXNlcnNcXFJlaWFuXFxEZXNrdG9wXFxXb3JrXFxGcmVlbGFuY2VcXGJveHhlci1jbGllbnQtY2xvbmUvcHJvamVjdHNcXGNsaWVudFxcc3JjXFxhcHBcXHNoYXJlZFxcbW9kdWxlc1xcYXV0aC1mb3JtXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9jbGllbnQvc3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9hdXRoLWZvcm0vbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGIiwiZmlsZSI6InByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2F1dGgtZm9ybS9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4ge1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuIiwiLmJ0biB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59Il19 */\"","import { Router } from '@angular/router';\r\nimport { AuthService } from '@app/core/services/auth.service';\r\nimport { Component, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { untilComponentDestroyed } from '@global/untilDestroy';\r\n\r\ninterface Credentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'bx-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnDestroy {\r\n  @Output()\r\n  loginComplete = new EventEmitter();\r\n  public loginForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: [\r\n        null,\r\n        Validators.compose([Validators.required, Validators.email])\r\n      ],\r\n      password: [null, Validators.required]\r\n    });\r\n  }\r\n  onLogin(credentials: Credentials) {\r\n    this.authService\r\n      .login(credentials.email, credentials.password)\r\n      .pipe(untilComponentDestroyed(this))\r\n      .subscribe(resp => {\r\n        this.router.navigate([this.authService.redirectUrl]);\r\n        this.loginComplete.emit();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n","export default \".btn {\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2F1dGgtZm9ybS9yZWdpc3Rlci9DOlxcVXNlcnNcXFJlaWFuXFxEZXNrdG9wXFxXb3JrXFxGcmVlbGFuY2VcXGJveHhlci1jbGllbnQtY2xvbmUvcHJvamVjdHNcXGNsaWVudFxcc3JjXFxhcHBcXHNoYXJlZFxcbW9kdWxlc1xcYXV0aC1mb3JtXFxyZWdpc3RlclxccmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJwcm9qZWN0cy9jbGllbnQvc3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9hdXRoLWZvcm0vcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtBQ0NGIiwiZmlsZSI6InByb2plY3RzL2NsaWVudC9zcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2F1dGgtZm9ybS9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4ge1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuIiwiLmJ0biB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG59Il19 */\"","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '@app/core/services/api.service';\r\nimport { AuthService } from '@app/core/services/auth.service';\r\nimport {\r\n  EmailValidation,\r\n  PasswordValidation\r\n} from '@app/shared/validators/register-validation';\r\nimport * as fromRoot from '@app/reducers';\r\nimport { Store } from '@ngrx/store';\r\nimport { untilComponentDestroyed } from '@global/untilDestroy';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport * as cart from '@app/cart/actions/cart';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'bx-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  email: string;\r\n  @Input()\r\n  checkout: boolean;\r\n  public registerForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private api: ApiService,\r\n    private auth: AuthService,\r\n    private store: Store<fromRoot.State>,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.registerForm = this.fb.group({\r\n      newsletter: [false],\r\n      checkout: [this.checkout],\r\n      emails: this.fb.group(\r\n        {\r\n          email: [\r\n            this.email ? this.email : null,\r\n            Validators.compose([Validators.required, Validators.email])\r\n          ],\r\n          confirmEmail: [\r\n            this.email ? this.email : null,\r\n            Validators.compose([Validators.required, Validators.email])\r\n          ]\r\n        },\r\n        {\r\n          validator: EmailValidation.MatchEmail\r\n        }\r\n      ),\r\n      passwords: this.fb.group(\r\n        {\r\n          password: [null, [Validators.required]],\r\n          confirmPassword: [null, [Validators.required]]\r\n        },\r\n        {\r\n          validator: PasswordValidation.MatchPassword\r\n        }\r\n      )\r\n    });\r\n  }\r\n  onRegister(values: any) {\r\n    this.api\r\n      .create(\r\n        'users',\r\n        {\r\n          email: values.emails.email,\r\n          password: values.passwords.password,\r\n          newsletter: values.newsletter,\r\n          checkout: values.checkout\r\n        },\r\n        true,\r\n        'Creating account'\r\n      )\r\n      .pipe(\r\n        switchMap((resp: any) => {\r\n          return this.auth.login(\r\n            values.emails.email,\r\n            values.passwords.password\r\n          );\r\n        }),\r\n        untilComponentDestroyed(this)\r\n      )\r\n      .subscribe(() => {\r\n        this.router.navigate(['/account']);\r\n        this.store.dispatch(new cart.Email(null));\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {}\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~app-auth-auth-module~checkout-checkout-module-es5.js"}